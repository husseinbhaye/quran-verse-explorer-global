
name: Build & Deploy to Web Server via SFTP

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build production bundle
        run: npm run build
        
      # Create enhanced .htaccess file for SPA routing with stronger cache control
      - name: Create .htaccess file for SPA routing with cache control
        run: |
          echo '<IfModule mod_rewrite.c>' > dist/.htaccess
          echo '  RewriteEngine On' >> dist/.htaccess
          echo '  RewriteBase /' >> dist/.htaccess
          echo '  RewriteRule ^index\.html$ - [L]' >> dist/.htaccess
          echo '  RewriteCond %{REQUEST_FILENAME} !-f' >> dist/.htaccess
          echo '  RewriteCond %{REQUEST_FILENAME} !-d' >> dist/.htaccess
          echo '  RewriteRule . /index.html [L]' >> dist/.htaccess
          echo '</IfModule>' >> dist/.htaccess
          echo '' >> dist/.htaccess
          echo '# Cache Control' >> dist/.htaccess
          echo '<IfModule mod_headers.c>' >> dist/.htaccess
          echo '  # Disable caching for HTML and JSON files' >> dist/.htaccess
          echo '  <FilesMatch "\.(html|htm|json)$">' >> dist/.htaccess
          echo '    Header set Cache-Control "no-store, no-cache, must-revalidate, max-age=0"' >> dist/.htaccess
          echo '    Header set Pragma "no-cache"' >> dist/.htaccess
          echo '    Header set Expires "0"' >> dist/.htaccess
          echo '  </FilesMatch>' >> dist/.htaccess
          echo '  # Allow caching of assets but with versioned URLs' >> dist/.htaccess
          echo '  <FilesMatch ".(js|css|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot|otf)$">' >> dist/.htaccess
          echo '    Header set Cache-Control "max-age=31536000, immutable"' >> dist/.htaccess
          echo '  </FilesMatch>' >> dist/.htaccess
          echo '</IfModule>' >> dist/.htaccess

      # Create clear-cache script
      - name: Create clear-cache script
        run: |
          echo "<!DOCTYPE html>" > dist/clear-cache.html
          echo "<html lang=\"en\">" >> dist/clear-cache.html
          echo "<head>" >> dist/clear-cache.html
          echo "  <meta charset=\"UTF-8\">" >> dist/clear-cache.html
          echo "  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">" >> dist/clear-cache.html
          echo "  <title>Cache Cleared - Eemaan Foundation</title>" >> dist/clear-cache.html
          echo "  <script>" >> dist/clear-cache.html
          echo "    // Clear all caches" >> dist/clear-cache.html
          echo "    function clearCache() {" >> dist/clear-cache.html
          echo "      localStorage.clear();" >> dist/clear-cache.html
          echo "      sessionStorage.clear();" >> dist/clear-cache.html
          echo "      if (window.caches) {" >> dist/clear-cache.html
          echo "        caches.keys().then(names => {" >> dist/clear-cache.html
          echo "          names.forEach(name => {" >> dist/clear-cache.html
          echo "            caches.delete(name);" >> dist/clear-cache.html
          echo "          });" >> dist/clear-cache.html
          echo "        });" >> dist/clear-cache.html
          echo "      }" >> dist/clear-cache.html
          echo "      document.getElementById('status').textContent = 'Cache cleared! Redirecting to home page...';" >> dist/clear-cache.html
          echo "      setTimeout(() => { window.location.href = '/' + '?nocache=' + Date.now(); }, 2000);" >> dist/clear-cache.html
          echo "    }" >> dist/clear-cache.html
          echo "  </script>" >> dist/clear-cache.html
          echo "</head>" >> dist/clear-cache.html
          echo "<body style=\"font-family:Arial,sans-serif;text-align:center;padding-top:50px;\">" >> dist/clear-cache.html
          echo "  <h1>Eemaan Foundation Quran Explorer</h1>" >> dist/clear-cache.html
          echo "  <h2>Cache Clearing Tool</h2>" >> dist/clear-cache.html
          echo "  <p>Click the button below to clear your browser cache for this website:</p>" >> dist/clear-cache.html
          echo "  <button onclick=\"clearCache()\" style=\"padding:10px 20px;font-size:16px;cursor:pointer;\">" >> dist/clear-cache.html
          echo "    Clear Cache & Reload" >> dist/clear-cache.html
          echo "  </button>" >> dist/clear-cache.html
          echo "  <p id=\"status\"></p>" >> dist/clear-cache.html
          echo "  <p><small>Build timestamp: $(date -u +"%Y-%m-%dT%H:%M:%SZ")</small></p>" >> dist/clear-cache.html
          echo "</body>" >> dist/clear-cache.html
          echo "</html>" >> dist/clear-cache.html

      - name: List build output
        run: |
          echo "=== Listing build output ==="
          ls -la dist/
          echo "=== End of listing ==="

      # Create a version.json file with timestamp if not already created by Vite
      - name: Ensure version.json exists
        run: |
          if [ ! -f dist/version.json ]; then
            echo "{\"version\":\"${{ github.sha }}\",\"buildTime\":\"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\",\"timestamp\":$(date +%s),\"runId\":\"${{ github.run_id }}\"}" > dist/version.json
            echo "Created version.json:"
            cat dist/version.json
          else
            echo "Using existing version.json:"
            cat dist/version.json
          fi

      # Create a test.html file to verify deployment
      - name: Create test HTML file
        run: |
          echo "<html><head><title>Deployment Test</title></head><body><h1>Deployment Test</h1><p>Deployed at $(date -u +"%Y-%m-%dT%H:%M:%SZ")</p><p>GitHub Run: ${{ github.run_id }}</p><p>Build: $(date +%s)</p></body></html>" > dist/test.html
          echo "Created test.html"

      - name: Deploy via SFTP
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          username: ${{ secrets.FTP_USERNAME }}
          server: ${{ secrets.FTP_HOST }}
          port: 22
          password: ${{ secrets.FTP_PASSWORD }}
          local_path: './dist/*'
          remote_path: '/public_html/Quran/'
          sftpArgs: '-o StrictHostKeyChecking=no -v'
          
      # Add a step to verify if files were deployed
      - name: Verify deployment
        run: |
          echo "Deployment completed at $(date)"
          echo "Check these URLs to verify deployment:"
          echo "1. Main site: https://quran.eemaanfoundation.com/"
          echo "2. Clear cache tool: https://quran.eemaanfoundation.com/clear-cache.html"
          echo "3. Version file: https://quran.eemaanfoundation.com/version.json"
          echo "4. Test page: https://quran.eemaanfoundation.com/test.html"
          echo "If you still don't see changes, access the clear-cache.html page to force a refresh"
