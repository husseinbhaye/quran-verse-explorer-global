name: 'Generate Deployment Files'
description: 'Creates necessary deployment files (.htaccess, test.html, clear-cache.html, version.json)'
author: 'Your Name'
branding:
  icon: 'terminal'
  color: 'green'

runs:
  using: "composite"
  steps:
    - name: Create .htaccess file for SPA routing with aggressive cache control
      shell: bash
      run: |
        echo '<IfModule mod_rewrite.c>' > dist/.htaccess
        echo '  RewriteEngine On' >> dist/.htaccess
        echo '  RewriteBase /' >> dist/.htaccess
        echo '  RewriteRule ^index\.html$ - [L]' >> dist/.htaccess
        echo '  RewriteCond %{REQUEST_FILENAME} !-f' >> dist/.htaccess
        echo '  RewriteCond %{REQUEST_FILENAME} !-d' >> dist/.htaccess
        echo '  RewriteRule . /index.html [L]' >> dist/.htaccess
        echo '</IfModule>' >> dist/.htaccess
        echo '' >> dist/.htaccess
        echo '# Aggressive Cache Control' >> dist/.htaccess
        echo '<IfModule mod_headers.c>' >> dist/.htaccess
        echo '  # Disable caching for HTML, PHP, and JSON files completely' >> dist/.htaccess
        echo '  <FilesMatch "\.(html|htm|php|json)$">' >> dist/.htaccess
        echo '    Header unset ETag' >> dist/.htaccess
        echo '    Header set Cache-Control "no-store, no-cache, must-revalidate, max-age=0"' >> dist/.htaccess
        echo '    Header set Pragma "no-cache"' >> dist/.htaccess
        echo '    Header set Expires "Thu, 01 Jan 1970 00:00:00 GMT"' >> dist/.htaccess
        echo '  </FilesMatch>' >> dist/.htaccess
        echo '  # Allow caching of versioned assets but force revalidation' >> dist/.htaccess
        echo '  <FilesMatch "\.(js|css|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot|otf)$">' >> dist/.htaccess
        echo '    Header set Cache-Control "public, max-age=31536000, immutable"' >> dist/.htaccess
        echo '  </FilesMatch>' >> dist/.htaccess
        echo '</IfModule>' >> dist/.htaccess

    - name: Create test HTML file
      shell: bash
      run: |
        cat > dist/test.html << 'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
  <meta http-equiv="Pragma" content="no-cache" />
  <meta http-equiv="Expires" content="0" />
  <title>Eemaan Foundation Test Page</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
      line-height: 1.6;
    }
    .success {
      background-color: #d4edda;
      border-color: #c3e6cb;
      color: #155724;
      padding: 15px;
      margin-bottom: 20px;
      border-radius: 4px;
    }
    .info {
      background-color: #cce5ff;
      border-color: #b8daff;
      color: #004085;
      padding: 15px;
      margin-bottom: 20px;
      border-radius: 4px;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin: 20px 0;
    }
    th, td {
      border: 1px solid #ddd;
      padding: 8px;
      text-align: left;
    }
    th {
      background-color: #f2f2f2;
    }
    button {
      background-color: #4CAF50;
      color: white;
      padding: 10px 15px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 16px;
    }
    button:hover {
      background-color: #45a049;
    }
  </style>
</head>
<body>
  <h1>Eemaan Foundation Quran Explorer</h1>
  <h2>Deployment Test Page</h2>
  <div class="success">
    <strong>Success!</strong> If you can see this page, the web server is functioning correctly.
  </div>
  <div class="info">
    <strong>Last Deployment:</strong> <span id="deployTime"></span>
  </div>
  <h3>System Information</h3>
  <table>
    <tr>
      <th>Information</th>
      <th>Value</th>
    </tr>
    <tr>
      <td>Deployment Timestamp</td>
      <td id="timestamp"></td>
    </tr>
    <tr>
      <td>Browser</td>
      <td id="browser"></td>
    </tr>
    <tr>
      <td>Current Time</td>
      <td id="currentTime"></td>
    </tr>
    <tr>
      <td>Cache Status</td>
      <td id="cacheStatus">Checking...</td>
    </tr>
  </table>
  <h3>Actions</h3>
  <p>
    <button onclick="clearCacheAndRedirect()">Clear Cache and Go to Homepage</button>
  </p>
  <script>
    // Set current time
    document.getElementById('currentTime').textContent = new Date().toLocaleString();
    // Set browser info
    document.getElementById('browser').textContent = navigator.userAgent;
    // Get deployment timestamp
    fetch('/version.json?nocache=' + Date.now())
      .then(response => {
        if (!response.ok) {
          throw new Error('Version file not found');
        }
        return response.json();
      })
      .then(data => {
        document.getElementById('timestamp').textContent = data.timestamp;
        document.getElementById('deployTime').textContent = new Date(data.buildTime).toLocaleString();
        // Check if cache is fresh
        const storedBuild = localStorage.getItem('app_build_timestamp');
        if (storedBuild && storedBuild === data.timestamp.toString()) {
          document.getElementById('cacheStatus').textContent = 'Using fresh cache';
        } else {
          document.getElementById('cacheStatus').textContent = 'Cache outdated or not set';
        }
      })
      .catch(error => {
        document.getElementById('timestamp').textContent = 'Error: ' + error.message;
      });
    // Function to clear cache and redirect
    function clearCacheAndRedirect() {
      localStorage.clear();
      sessionStorage.clear();
      alert('Cache cleared. Redirecting to homepage...');
      window.location.href = '/?fresh=' + Date.now();
    }
  </script>
</body>
</html>
EOF

    - name: Create clear-cache.html file
      shell: bash
      run: |
        cat > dist/clear-cache.html << 'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
  <meta http-equiv="Pragma" content="no-cache" />
  <meta http-equiv="Expires" content="0" />
  <title>Cache Management - Eemaan Foundation</title>
  <style>
    body { 
      font-family: Arial, sans-serif; 
      line-height: 1.6; 
      max-width: 800px; 
      margin: 0 auto; 
      padding: 20px; 
    }
    h1, h2 { 
      color: #2c3e50; 
    }
    button { 
      background: #3498db; 
      color: white; 
      border: none; 
      padding: 12px 24px; 
      font-size: 16px; 
      cursor: pointer; 
      border-radius: 4px; 
    }
    button:hover { 
      background: #2980b9; 
    }
    .status { 
      padding: 12px; 
      margin: 12px 0; 
      border-radius: 4px; 
    }
    .success { 
      background: #d4edda; 
      color: #155724; 
    }
    .info { 
      background: #d1ecf1; 
      color: #0c5460; 
    }
    .steps { 
      background: #f8f9fa; 
      padding: 15px; 
      border-radius: 4px; 
    }
    .loader {
      border: 5px solid #f3f3f3;
      border-radius: 50%;
      border-top: 5px solid #3498db;
      width: 30px;
      height: 30px;
      animation: spin 1s linear infinite;
      display: inline-block;
      margin-right: 10px;
      vertical-align: middle;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  </style>
</head>
<body>
  <h1>Eemaan Foundation Quran Explorer</h1>
  <h2>Cache Management Tool</h2>
  <p id="buildInfo">Loading build information...</p>
  <div class="steps">
    <h3>If you're experiencing issues with the website not updating:</h3>
    <ol>
      <li>Click the button below to clear your browser cache for this website</li>
      <li>You'll be automatically redirected to the home page</li>
      <li>If issues persist, try opening the site in an incognito/private window</li>
      <li>As a last resort, clear your entire browser cache from your browser settings</li>
    </ol>
  </div>
  <p><button onclick="clearCache()">Clear Cache & Reload</button></p>
  <div id="status" class="status info" style="display: none;"></div>
  <hr>
  <h3>Advanced Troubleshooting</h3>
  <p>If you continue to see outdated content:</p>
  <ol>
    <li>Try the <a href="/test.html">test page</a> to verify server connectivity and deployment status</li>
    <li>Check if the <a href="/version.json" target="_blank">version file</a> is accessible</li>
    <li>Try accessing the site using a different browser</li>
    <li>If using a corporate network, contact your IT department as they may have caching proxies</li>
  </ol>
  <script>
    // Get build information
    async function getBuildInfo() {
      try {
        const response = await fetch('/version.json?t=' + Date.now());
        if (response.ok) {
          const data = await response.json();
          document.getElementById('buildInfo').textContent = 'Current build: ' + 
            new Date(data.buildTime).toLocaleString() + ' (Timestamp: ' + data.timestamp + ')';
          return data;
        }
      } catch (e) {
        console.error('Error fetching build info:', e);
        document.getElementById('buildInfo').textContent = 'Error loading build information. Server may be unavailable.';
      }
      return null;
    }
    // Clear all caches
    async function clearCache() {
      const status = document.getElementById('status');
      status.innerHTML = '<div class="loader"></div> <strong>Clearing cache...</strong>';
      status.className = 'status info';
      status.style.display = 'block';
      // Clear localStorage
      localStorage.clear();
      // Clear sessionStorage
      sessionStorage.clear();
      // Get latest build info
      const buildInfo = await getBuildInfo();
      if (buildInfo) {
        localStorage.setItem('app_build_timestamp', buildInfo.timestamp.toString());
        status.innerHTML += '<br>Updated to latest build timestamp: ' + buildInfo.timestamp;
      }
      // Clear browser cache via Cache API
      if (window.caches) {
        try {
          const keys = await caches.keys();
          await Promise.all(keys.map(key => caches.delete(key)));
          status.innerHTML += '<br>Browser cache API cleared successfully.';
        } catch (e) {
          console.error('Error clearing Cache API:', e);
          status.innerHTML += '<br>Error clearing browser cache API: ' + e.message;
        }
      }
      // Success message
      status.className = 'status success';
      status.innerHTML = '<strong>Success!</strong> Cache has been cleared. Redirecting to home page in 3 seconds...';
      // Redirect with timestamp to bypass any remaining cache
      setTimeout(() => {
        window.location.href = '/?fresh=' + Date.now();
      }, 3000);
    }
    // Initialize
    window.onload = () => {
      getBuildInfo();
    };
  </script>
</body>
</html>
EOF

    - name: Ensure version.json exists
      shell: bash
      run: |
        if [ ! -f dist/version.json ]; then
          echo "{\"version\":\"${{ github.sha }}\",\"buildTime\":\"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\",\"timestamp\":$(date +%s),\"runId\":\"${{ github.run_id }}\"}" > dist/version.json
          echo "Created version.json:"
          cat dist/version.json
        else
          echo "Using existing version.json:"
          cat dist/version.json
        fi
