
name: 'Generate Cache Manager'
description: 'Creates clear-cache.html file for management of browser caches'
author: 'Eemaan Foundation'
branding:
  icon: 'refresh-cw'
  color: 'blue'

runs:
  using: "composite"
  steps:
    - name: Create clear-cache.html file
      shell: bash
      run: |
        cat > dist/clear-cache.html << 'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
  <meta http-equiv="Pragma" content="no-cache" />
  <meta http-equiv="Expires" content="0" />
  <title>Cache Management - Eemaan Foundation</title>
  <style>
    body { 
      font-family: Arial, sans-serif; 
      line-height: 1.6; 
      max-width: 800px; 
      margin: 0 auto; 
      padding: 20px; 
    }
    h1, h2 { 
      color: #2c3e50; 
    }
    button { 
      background: #3498db; 
      color: white; 
      border: none; 
      padding: 12px 24px; 
      font-size: 16px; 
      cursor: pointer; 
      border-radius: 4px; 
    }
    button:hover { 
      background: #2980b9; 
    }
    .status { 
      padding: 12px; 
      margin: 12px 0; 
      border-radius: 4px; 
    }
    .success { 
      background: #d4edda; 
      color: #155724; 
    }
    .info { 
      background: #d1ecf1; 
      color: #0c5460; 
    }
    .steps { 
      background: #f8f9fa; 
      padding: 15px; 
      border-radius: 4px; 
    }
    .loader {
      border: 5px solid #f3f3f3;
      border-radius: 50%;
      border-top: 5px solid #3498db;
      width: 30px;
      height: 30px;
      animation: spin 1s linear infinite;
      display: inline-block;
      margin-right: 10px;
      vertical-align: middle;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  </style>
</head>
<body>
  <h1>Eemaan Foundation Quran Explorer</h1>
  <h2>Cache Management Tool</h2>
  
  <p id="buildInfo">Loading build information...</p>
  
  <div class="steps">
    <h3>If you're experiencing issues with the website not updating:</h3>
    <ol>
      <li>Click the button below to clear your browser cache for this website</li>
      <li>You'll be automatically redirected to the home page</li>
      <li>If issues persist, try opening the site in an incognito/private window</li>
      <li>As a last resort, clear your entire browser cache from your browser settings</li>
    </ol>
  </div>
  
  <p><button onclick="clearCache()">Clear Cache & Reload</button></p>
  
  <div id="status" class="status info" style="display: none;"></div>
  
  <hr>
  
  <h3>Advanced Troubleshooting</h3>
  <p>If you continue to see outdated content:</p>
  <ol>
    <li>Try the <a href="/test.html">test page</a> to verify server connectivity and deployment status</li>
    <li>Check if the <a href="/version.json" target="_blank">version file</a> is accessible</li>
    <li>Try accessing the site using a different browser</li>
    <li>If using a corporate network, contact your IT department as they may have caching proxies</li>
  </ol>
  
  <script>
    // Get build information
    async function getBuildInfo() {
      try {
        const response = await fetch('/version.json?t=' + Date.now());
        if (response.ok) {
          const data = await response.json();
          document.getElementById('buildInfo').textContent = 'Current build: ' + 
            new Date(data.buildTime).toLocaleString() + ' (Timestamp: ' + data.timestamp + ')';
          return data;
        }
      } catch (e) {
        console.error('Error fetching build info:', e);
        document.getElementById('buildInfo').textContent = 'Error loading build information. Server may be unavailable.';
      }
      return null;
    }
    
    // Clear all caches
    async function clearCache() {
      const status = document.getElementById('status');
      status.innerHTML = '<div class="loader"></div> <strong>Clearing cache...</strong>';
      status.className = 'status info';
      status.style.display = 'block';
      
      // Clear localStorage
      localStorage.clear();
      
      // Clear sessionStorage
      sessionStorage.clear();
      
      // Get latest build info
      const buildInfo = await getBuildInfo();
      if (buildInfo) {
        localStorage.setItem('app_build_timestamp', buildInfo.timestamp.toString());
        status.innerHTML += '<br>Updated to latest build timestamp: ' + buildInfo.timestamp;
      }
      
      // Clear browser cache via Cache API
      if (window.caches) {
        try {
          const keys = await caches.keys();
          await Promise.all(keys.map(key => caches.delete(key)));
          status.innerHTML += '<br>Browser cache API cleared successfully.';
        } catch (e) {
          console.error('Error clearing Cache API:', e);
          status.innerHTML += '<br>Error clearing browser cache API: ' + e.message;
        }
      }
      
      // Success message
      status.className = 'status success';
      status.innerHTML = '<strong>Success!</strong> Cache has been cleared. Redirecting to home page in 3 seconds...';
      
      // Redirect with timestamp to bypass any remaining cache
      setTimeout(() => {
        window.location.href = '/?fresh=' + Date.now();
      }, 3000);
    }
    
    // Initialize
    window.onload = () => {
      getBuildInfo();
    };
  </script>
</body>
</html>
EOF
